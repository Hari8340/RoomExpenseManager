@model List<RoomExpenseManagerWebApp.Models.UserResponse>

<div class="container my-4">
    <div class="row">
        
        @foreach (var user in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <img src="data:image/jpeg;base64,@user.ImageBase64" class="card-img-top card-img" alt="User Image">
                    <div class="card-body">
                        <h5 class="card-title">@user.Name</h5>
                        <p class="card-text">
                            <strong>ID:</strong> @user.UserId
                        </p>
                    </div>
                    <div class="card-footer">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#aadharModal-@user.UserId">
                            View Aadhar PDF
                        </button>
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editUserModal-@user.UserId">
                            Edit
                        </button>
                        <button type="button" class="btn btn-danger" onclick="deleteUser(@user.UserId)">
                            Delete
                        </button>
                    </div>
                </div>
            </div>

            <!-- Aadhar PDF Modal -->
            <div class="modal fade" id="aadharModal-@user.UserId" tabindex="-1" aria-labelledby="aadharModalLabel-@user.UserId" aria-hidden="true" data-bs-backdrop="static">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="aadharModalLabel-@user.UserId">@user.Name's Aadhar PDF</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <iframe src="data:application/pdf;base64,@user.AadharPdfBase64" width="100%" height="600px" style="border: none;"></iframe>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit User Modal -->
            <div class="modal fade" id="editUserModal-@user.UserId" tabindex="-1" aria-labelledby="editUserModalLabel-@user.UserId" aria-hidden="true" data-bs-backdrop="static">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editUserModalLabel-@user.UserId">Edit User: @user.Name</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="editUserForm-@user.UserId" onsubmit="editUser(event, @user.UserId)" enctype="multipart/form-data">
                                <div class="mb-3">
                                    <label for="userName-@user.UserId" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="userName-@user.UserId" value="@user.Name" required>
                                </div>
                                <div class="mb-3">
                                    <label for="userDob-@user.UserId" class="form-label">Date of Birth</label>
                                    <input type="date" class="form-control" id="userDob-@user.UserId" value="@user.DOB.ToString("yyyy-MM-dd")" required>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Current Image:</label>
                                    <img src="data:image/jpeg;base64,@user.ImageBase64" id="existingImage-@user.UserId" class="img-thumbnail" width="150">
                                </div>
                                <div class="mb-3">
                                    <label for="userImage-@user.UserId" class="form-label">Upload New Image (optional)</label>
                                    <input type="file" class="form-control" id="userImage-@user.UserId" accept="image/*">
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Current Aadhar PDF:</label>
                                    <button type="button" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#aadharModal-@user.UserId" onclick="openPdfAndKeepEditModal(@user.UserId)">
                                        View Current PDF
                                    </button>
                                </div>
                                <div class="mb-3">
                                    <label for="userAadhar-@user.UserId" class="form-label">Upload New Aadhar PDF (optional)</label>
                                    <input type="file" class="form-control" id="userAadhar-@user.UserId" accept="application/pdf">
                                </div>

                                <button type="submit" class="btn btn-success">Save Changes</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    showLoader();
    window.addEventListener("load", function () {
        document.getElementById("loader").style.display = "none"; // Hide loader after content is fully loaded
    });
    $(document).ready(function () {
        showLoader();
    });
    function openPdfAndKeepEditModal(userId) {
        // Hide the Edit User modal when opening the Aadhar PDF modal
        const editUserModal = new bootstrap.Modal(document.getElementById(`editUserModal-${userId}`));
        editUserModal.hide();

        // When Aadhar PDF modal closes, reopen the Edit User modal
        const aadharModalElement = document.getElementById(`aadharModal-${userId}`);
        aadharModalElement.addEventListener('hidden.bs.modal', function () {
            editUserModal.show();
        });
    }

    async function editUser(event, userId) {
        event.preventDefault();

        const nameInput = document.getElementById(`userName-${userId}`);
        const dobInput = document.getElementById(`userDob-${userId}`);
        const imageInput = document.getElementById(`userImage-${userId}`);
       @*  const existingImageInput = document.getElementById(`existingImage-${userId}`); *@
        const aadharInput = document.getElementById(`userAadhar-${userId}`);
        @* const existingAadharInput = document.getElementById(`existingAadharPdf-${userId}`); *@

        // Log to see if they are null
        console.log({ nameInput, dobInput, imageInput, aadharInput });

        // Check for null values and handle accordingly
        if (!nameInput || !dobInput) {
            alert('Name and DOB fields are required.');
            return;
        }

        const formData = new FormData();
        formData.append('UserId', userId);
        formData.append('Name', nameInput.value);
        formData.append('DOB', dobInput.value);

        if (imageInput.files.length > 0) {
            formData.append('Image', imageInput.files[0]);
        } @* else if (existingImageInput) {
            
            const existingImageBase64 = existingImageInput.src.split(',')[1]; // Extract base64 string
            formData.append('ImageBase64', existingImageBase64);
        } *@

        if (aadharInput.files.length > 0) {
            formData.append('AadharPdf', aadharInput.files[0]);
        } @* else if (existingAadharInput) {
            formData.append('AadharPdfBase64', existingAadharInput.value);
        } *@

        try {
            const response = await fetch(`/User/UpdateUser/${userId}`, {
                method: 'PUT',
                body: formData
            });

            if (response.ok) {
                alert('User updated successfully.');
                location.reload(); // Reload the page to reflect changes
            } else {
                alert('User updated successfully.');
                location.reload()
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred.');
        }
    }




async function deleteUser(id) {
    if (!confirm('Are you sure you want to delete this user?')) return;

    try {
        const response = await fetch(`/User/DeleteUser/${id}`, {
            method: 'DELETE'
        });

        if (response.ok) {
            alert('User deleted successfully.');
            location.reload(); // Reload page to reflect changes
        } else {
            alert('Failed to delete user.');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred.');
    }
}
</script>
